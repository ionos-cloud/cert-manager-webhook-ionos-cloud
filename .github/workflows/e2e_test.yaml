name: e2e tests
on:
  pull_request:

jobs:
    e2e-test:
      runs-on: ubuntu-latest
      strategy:
        matrix:
          # temporary: cert_manager_version: ["v1.15.0", "v1.16.0", "v1.17.0"]
          cert_manager_version: ["v1.17.0"]
      steps:
        - name: Create k8s Kind Cluster
          uses: helm/kind-action@v1
        - uses: azure/setup-helm@v4.3.0
          name: install helm
        - uses: actions/checkout@v4
          name: checkout
        - name: install cert-manager chart
          run: |
            helm repo add jetstack https://charts.jetstack.io --force-update
            helm install \
            cert-manager jetstack/cert-manager \
            --namespace cert-manager \
            --create-namespace \
            --set crds.enabled=true \
             --set 'extraArgs={--dns01-recursive-nameservers-only,--dns01-recursive-nameservers=8.8.8.8:53\,1.1.1.1:53}' \
            --version ${{ matrix.cert_manager_version }}
        - name: Setup go
          uses: actions/setup-go@v5
          with:
            go-version: stable
        - name: build binary
          run: |
            go build -o cert-manager-webhook-ionos-cloud cmd/webhook/main.go
          # we have to make sure we use the latest code in the chart
        - name: build docker image
          run: |
            docker build . -t cert-manager-e2e-tests:${{ github.run_number }}
        - name: load image into kind
          run: |
            kind load docker-image cert-manager-e2e-tests:${{ github.run_number }} -n chart-testing
        - name: install cert-manager-webhook-ionos-cloud chart
          run: |
            helm install cert-manager-webhook-ionos-cloud chart/cert-manager-webhook-ionos-cloud \
            --set image.repository=cert-manager-e2e-tests \
            --set image.tag=${{ github.run_number }}
            sleep 10s
            kubectl get po
            kubectl describe po -l app=cert-manager-webhook-ionos-cloud
            kubectl describe deployment cert-manager-webhook-ionos-cloud
            kubectl logs -l app=cert-manager-webhook-ionos-cloud
            kubectl wait --timeout=30s --for=jsonpath='{.status.readyReplicas}'=1 deployment/cert-manager-webhook-ionos-cloud
        - name: create ionos token secret
          env:
              IONOS_TOKEN: ${{ secrets.IONOS_TOKEN }}
          run: |
            kubectl create secret generic cert-manager-webhook-ionos-cloud --from-literal=auth-token="$(echo $IONOS_TOKEN)"
        - name: create issuer
          run: |
            kubectl apply -f .github/test-manifests/issuer.yaml
            kubectl wait --timeout=10s --for=condition=Ready=True issuer/letsencrypt-ionos-e2e
        - name: create certificate and check issuance
          env:
              TEST_ZONE_NAME: ${{ secrets.TEST_ZONE_NAME }}
          run: |
            cat .github/test-manifests/certificate.tmpl.yaml | envsubst | kubectl apply -f -
            kubectl wait --timeout=2m --for=condition=Ready=True certificate/certificate-ionos-with-dns-01-test
          
            